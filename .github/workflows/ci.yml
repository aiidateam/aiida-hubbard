name: ci

on: [push, pull_request]

jobs:

    pre-commit:

        runs-on: ubuntu-latest

        steps:
        -   uses: actions/checkout@v1

        -   name: Cache python dependencies
            id: cache-pip
            uses: actions/cache@v4
            with:
                path: ~/.cache/pip
                key: pip-pre-commit-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-pre-commit-

        -   name: Set up Python
            uses: actions/setup-python@v2
            with:
                python-version: '3.9'

        -   name: Install python dependencies
            run: pip install -e .[pre-commit,tests]

        -   name: Run pre-commit
            run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    tests:

        runs-on: ubuntu-latest

        env:
            AIIDA_WARN_v3: 1

        strategy:
            matrix:
                python-version: ['3.9']

        services:
            rabbitmq:
                image: rabbitmq:latest
                ports:
                -   5672:5672

        steps:
        -   uses: actions/checkout@v4

        -   name: Cache python dependencies
            id: cache-pip
            uses: actions/cache@v4
            with:
                path: ~/.cache/pip
                key: pip-${{ matrix.python-version }}-tests-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-${{ matrix.python-version }}-tests

        -   name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v2
            with:
                python-version: ${{ matrix.python-version }}

        -   name: Install system dependencies
            run: sudo apt update && sudo apt install postgresql

        -   name: Install python dependencies
            run: pip install -e .[tests]

        -   name: Run pytest
            run: pytest -sv --cov --cov-report=xml tests

        -   name: Upload to Codecov
            uses: codecov/codecov-action@v5
            with:
                token: ${{ secrets.CODECOV_TOKEN }}
                slug: aiidateam/aiida-hubbard
                name: pytests-3.9
                flags: pytests
                fail_ci_if_error: true

    integration:

            runs-on: ubuntu-latest

            strategy:
                matrix:
                    python-version: ['3.9', '3.12']

            defaults:
                run:
                    shell: bash -l {0}

            services:
                postgres:
                    image: postgres:12
                    env:
                        POSTGRES_HOST: 127.0.0.1
                        POSTGRES_USER: postgres
                        POSTGRES_PASSWORD: postgres
                        POSTGRES_DB: postgres
                    ports:
                    -   5432:5432
                rabbitmq:
                    image: rabbitmq:latest
                    ports:
                    -   5672:5672

            steps:
            -   uses: actions/checkout@v4

            # -   name: Cache Python dependencies
            #     uses: actions/cache@v4
            #     with:
            #         path: ~/.cache/pip
            #         key: pip-${{ matrix.python-version }}-tests-${{ hashFiles('**/setup.json') }}
            #         restore-keys:
            #             pip-${{ matrix.python-version }}-tests

            -   name: Setup Conda
                uses: conda-incubator/setup-miniconda@v3
                with:
                    python-version: ${{ matrix.python-version }}
                    channels: conda-forge
                    auto-activate-base: true

            -   name: Set up Quantum ESPRESSO
                run: conda install -y qe pip

            -   name: Install Python dependencies
                run: pip install -e .[tests]

            -   name: Create AiiDA profile
                run: verdi setup -n --config .github/config/profile.yaml

            -   name: Setup localhost
                run: verdi computer setup -n --config .github/config/localhost-setup.yaml

            -   name: Configure localhost
                run: verdi computer configure core.local localhost -n --config .github/config/localhost-config.yaml

            -   name: Setup `pw.x`
                run: verdi code create core.code.installed -n --config .github/config/code-pw.yaml --filepath-executable $(which pw.x)

            -   name: Setup `hp.x`
                run: verdi code create core.code.installed -n --config .github/config/code-hp.yaml --filepath-executable $(which hp.x)

            -   name: Setup SSSP
                run: aiida-pseudo install sssp -v 1.3 -x PBEsol -p efficiency

            -   name: Run example scripts
                run: pytest -sv examples
