[build-system]
requires = ['flit_core>=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-quantumespresso-hp'
dynamic = ['description', 'version']
authors = [
    {name = 'Sebastiaan P. Huber', email = 'mail@sphuber.net'}
]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 4 - Beta',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
]
keywords = ['aiida', 'workflows']
requires-python = '>=3.6'
dependencies = [
    'aiida-core~=1.4',
    'aiida-quantumespresso~=3.0',
    'aiida-sssp~=0.1',
    'click~=7.0',
    'click-completion~=0.5',
]

[project.urls]
Source = 'https://github.com/aiidateam/aiida-quantumespresso-hp'

[project.optional-dependencies]
pre-commit = [
    'pre-commit~=2.17',
    'pylint==2.13.7',
    'pylint-aiida~=0.1.1',
]
tests = [
    'pgtest~=1.3',
    'pytest~=5.4',
    'pytest-regressions~=1.0',
]

[project.entry-points.'aiida.calculations']
'quantumespresso.hp' = 'aiida_quantumespresso_hp.calculations.hp:HpCalculation'

[project.entry-points.'aiida.parsers']
'quantumespresso.hp' = 'aiida_quantumespresso_hp.parsers.hp:HpParser'

[project.entry-points.'aiida.workflows']
'quantumespresso.hp.main' = 'aiida_quantumespresso_hp.workflows.hp.main:HpWorkChain'
'quantumespresso.hp.parallelize_atoms' = 'aiida_quantumespresso_hp.workflows.hp.parallelize_atoms:HpParallelizeAtomsWorkChain'
'quantumespresso.hp.base' = 'aiida_quantumespresso_hp.workflows.hp.base:HpBaseWorkChain'
'quantumespresso.hp.hubbard' = 'aiida_quantumespresso_hp.workflows.hubbard:SelfConsistentHubbardWorkChain'

[tool.flit.module]
name = 'aiida_quantumespresso_hp'

[tool.flit.sdist]
exclude = [
    '.github/',
    'tests/',
    '.gitignore',
    '.pre-commit-config.yaml',
]

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3

[tool.pydocstyle]
ignore = [
    'D104',
    'D203',
    'D213'
]

[tool.pylint.master]
load-plugins = ['pylint_aiida']

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    'bad-continuation',
    'duplicate-code',
    'import-outside-toplevel',
    'inconsistent-return-statements',
    'invalid-name',
    'no-member',
    'too-many-arguments',
    'too-many-branches',
    'too-many-locals',
]

[tool.yapf]
align_closing_bracket_with_visual_indent = true
based_on_style = 'google'
coalesce_brackets = true
column_limit = 120
dedent_closing_brackets = true
indent_dictionary_value = false
split_arguments_when_comma_terminated = true
